/**
 * Script para probar filtros de categor√≠as en bandeja
 */

const axios = require('axios');

const API_URL = 'http://localhost:3000/api';

const TEST_USER = {
  email: 'admin@sgd.com',
  password: 'admin123'
};

async function testCategoryFilters() {
  try {
    console.log('üß™ PRUEBAS DE FILTROS POR CATEGOR√çA\n');
    console.log('='.repeat(60) + '\n');

    // 1. Login
    console.log('üîê Iniciando sesi√≥n...');
    const loginResponse = await axios.post(`${API_URL}/auth/login`, TEST_USER);
    const token = loginResponse.data.data.token;
    const userId = loginResponse.data.data.user.id;
    const areaId = loginResponse.data.data.user.areaId;
    console.log(`‚úì Sesi√≥n iniciada - Usuario: ${loginResponse.data.data.user.nombre}`);
    console.log(`  √Årea: ${loginResponse.data.data.user.area.nombre} (ID: ${areaId})\n`);

    // 2. Obtener categor√≠as del √°rea
    console.log(`üìã Obteniendo categor√≠as del √°rea ${areaId}...`);
    const categoriesResponse = await axios.get(
      `${API_URL}/areas/${areaId}/categories`,
      { headers: { 'Authorization': `Bearer ${token}` } }
    );
    const categories = categoriesResponse.data.data;
    console.log(`‚úì ${categories.length} categor√≠as encontradas:`);
    categories.forEach(cat => {
      console.log(`  - [${cat.id}] ${cat.nombre} (${cat.codigo}) - ${cat.color}`);
    });
    console.log('');

    // 3. Actualizar documento de prueba con categor√≠a
    if (categories.length > 0) {
      const testCategoryId = categories[0].id;
      console.log(`üìù Asignando categor√≠a "${categories[0].nombre}" al documento de prueba...`);
      
      // Primero obtener el documento de prueba
      const docsResponse = await axios.get(
        `${API_URL}/documents/area/${areaId}`,
        { headers: { 'Authorization': `Bearer ${token}` } }
      );
      
      if (docsResponse.data.data && docsResponse.data.data.length > 0) {
        const testDoc = docsResponse.data.data[0];
        console.log(`  Documento encontrado: ${testDoc.trackingCode}`);
        
        // Actualizar con categor√≠a
        await axios.put(
          `${API_URL}/documents/${testDoc.id}`,
          { categoriaId: testCategoryId },
          { headers: { 'Authorization': `Bearer ${token}` } }
        );
        console.log(`‚úì Categor√≠a asignada exitosamente\n`);
      }
    }

    // 4. Probar filtro sin categor√≠a (todos)
    console.log('üîç Probando filtro: TODOS los documentos...');
    const allDocsResponse = await axios.get(
      `${API_URL}/documents/area/${areaId}`,
      { headers: { 'Authorization': `Bearer ${token}` } }
    );
    console.log(`‚úì ${allDocsResponse.data.count} documentos encontrados\n`);

    // 5. Probar filtro con categor√≠a espec√≠fica
    if (categories.length > 0) {
      const filterCategoryId = categories[0].id;
      console.log(`üîç Probando filtro: Categor√≠a "${categories[0].nombre}"...`);
      const filteredResponse = await axios.get(
        `${API_URL}/documents/area/${areaId}?category=${filterCategoryId}`,
        { headers: { 'Authorization': `Bearer ${token}` } }
      );
      
      console.log(`‚úì ${filteredResponse.data.count} documentos con esta categor√≠a:`);
      filteredResponse.data.data.forEach(doc => {
        const catName = doc.categoria ? doc.categoria.nombre : 'Sin categor√≠a';
        const catColor = doc.categoria ? doc.categoria.color : '#gray';
        console.log(`  - ${doc.trackingCode}: ${doc.asunto}`);
        console.log(`    Categor√≠a: ${catName} (${catColor})`);
      });
      console.log('');
    }

    // 6. Probar filtro combinado: categor√≠a + tipo de documento
    if (categories.length > 0) {
      console.log('üîç Probando filtro combinado: Categor√≠a + Tipo...');
      const combinedResponse = await axios.get(
        `${API_URL}/documents/area/${areaId}?category=${categories[0].id}&documentType=1`,
        { headers: { 'Authorization': `Bearer ${token}` } }
      );
      console.log(`‚úì ${combinedResponse.data.count} documentos encontrados con filtros combinados\n`);
    }

    // 7. Probar filtro combinado: categor√≠a + b√∫squeda
    if (categories.length > 0) {
      console.log('üîç Probando filtro combinado: Categor√≠a + B√∫squeda...');
      const searchResponse = await axios.get(
        `${API_URL}/documents/area/${areaId}?category=${categories[0].id}&search=prueba`,
        { headers: { 'Authorization': `Bearer ${token}` } }
      );
      console.log(`‚úì ${searchResponse.data.count} documentos encontrados\n`);
    }

    console.log('='.repeat(60));
    console.log('‚úÖ Todas las pruebas de filtros completadas exitosamente!\n');

  } catch (error) {
    console.error('‚ùå Error:', error.response?.data || error.message);
  }
}

testCategoryFilters();
